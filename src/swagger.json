{
  "openapi": "3.0.3",
  "info": {
    "title": "Contacts API docs",
    "description": "API documentation for Contacts backend\n[GitHub repository](https://github.com/OlenaPobehailo/contacts-REST-API)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://contacts-rest-api-siob.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "api/contacts",
      "description": "Work with contacts collection"
    },
    {
      "name": "users",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/api/contacts": {
      "get": {
        "summary": "Returns an array of all contacts in json format",
        "tags": [
          "api/contacts"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token for authentication"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            },
            "description": "Number of contacts per page"
          },
          {
            "name": "favorite",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filter contacts by favorite field"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new contact",
        "tags": [
          "api/contacts"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token for authentication"
          }
        ],
        "requestBody": {
          "description": "Contact information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "email",
                    "phone"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Missing required name field"
          }
        }
      }
    },
    "/api/contacts/{id}": {
      "get": {
        "summary": "Returns contact by id in json format",
        "tags": [
          "api/contacts"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token for authentication"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the contact to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a contact by ID",
        "tags": [
          "api/contacts"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token for authentication"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the contact to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Contact deleted"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "put": {
        "summary": "Update a contact by ID",
        "tags": [
          "api/contacts"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token for authentication"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the contact to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated contact information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Missing fields"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    },
    "/api/contacts/{contactId}/favorite": {
      "patch": {
        "summary": "Update the favorite status of a contact by ID",
        "tags": [
          "api/contacts"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token for authentication"
          },
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "description": "ID of the contact to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated favorite status information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "favorite": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "favorite"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact favorite status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Missing field favorite"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    },
    "/api/users/signup": {
      "post": {
        "summary": "User registration",
        "tags": [
          "users"
        ],
        "requestBody": {
          "description": "Registration Request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "subscription": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error details from Joi or another validation library"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "User login",
        "tags": [
          "users"
        ],
        "requestBody": {
          "description": "Login Request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "user_password"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "exampletoken"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error from Joi or another validation library"
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "summary": "User logout",
        "tags": [
          "users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token for authentication"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "summary": "Get current user details",
        "tags": [
          "users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/users/avatars": {
      "patch": {
        "summary": "Update user avatar",
        "tags": [
          "users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "User's avatar image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatarURL": {
                      "type": "string",
                      "example": "image link goes here"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/users/verify/{verificationToken}": {
      "get": {
        "summary": "Verify user by verification token",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "verificationToken",
            "in": "path",
            "required": true,
            "description": "Token used for user verification",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification successful"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/verify": {
      "post": {
        "summary": "Resend email verification",
        "tags": [
          "users"
        ],
        "requestBody": {
          "description": "Resend Verification Email Request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed"
          },
          "401": {
            "description": "Email not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "favorite": {
            "type": "boolean"
          },
          "owner": {
            "type": "string",
            "description": "MongoDB ObjectId"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "subscription": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}